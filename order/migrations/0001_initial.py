# Generated by Django 3.1.5 on 2021-03-04 15:20

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '__first__'),
        ('driver', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ref', models.CharField(max_length=50, null=True)),
                ('public_id', models.CharField(max_length=75, null=True, unique=True)),
                ('state', models.PositiveIntegerField(choices=[(1, 'Submitted'), (2, 'Driver Not assiged'), (3, 'Driver Assigned'), (4, 'in progress'), (5, 'Arrival at client'), (6, 'Failed'), (7, 'Delivered'), (8, 'failed awaiting warehouse'), (9, 'Delivered at warehouse'), (10, 'Returned from warehouse'), (11, 'Recieved from warehouse'), (12, 'Cancelled')], default=1)),
                ('payment_method', models.PositiveSmallIntegerField(choices=[(1, 'Prepaid'), (2, 'Postpaid'), (3, 'Credit')], default=1)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('signature', models.URLField(blank=True, null=True)),
                ('pod_images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=2048), null=True, size=None)),
                ('datetime_failed', models.DateTimeField(null=True)),
                ('datetime_started', models.DateTimeField(null=True)),
                ('datetime_arrived', models.DateTimeField(null=True)),
                ('datetime_assigned', models.DateTimeField(null=True)),
                ('datetime_accepted', models.DateTimeField(null=True)),
                ('datetime_reviewed', models.DateTimeField(null=True)),
                ('datetime_completed', models.DateTimeField(null=True)),
                ('datetime_ordered', models.DateTimeField(default=django.utils.timezone.now)),
                ('price', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('width', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('length', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('height', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('pickup_location_details', models.TextField(null=True)),
                ('pickup_location_name', models.CharField(max_length=255)),
                ('pickup_contact_phone_number', models.BigIntegerField(null=True)),
                ('pickup_contact_name', models.CharField(max_length=255, null=True)),
                ('pickup_contact_email', models.EmailField(max_length=254, null=True)),
                ('pickup_location_name_more', models.CharField(max_length=255, null=True)),
                ('pickup_lat', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('pickup_lng', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('dropoff_location_details', models.TextField(null=True)),
                ('dropoff_location_name', models.CharField(max_length=255)),
                ('dropoff_contact_phone_number', models.BigIntegerField(null=True)),
                ('dropoff_contact_name', models.CharField(max_length=255, null=True)),
                ('dropoff_contact_email', models.EmailField(max_length=254, null=True)),
                ('dropoff_location_name_more', models.CharField(max_length=255, null=True)),
                ('dropoff_lat', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('dropoff_lng', models.DecimalField(decimal_places=16, max_digits=22, null=True)),
                ('customer_phone_number', models.BigIntegerField(null=True)),
                ('customer_email', models.EmailField(max_length=254, null=True)),
                ('customer_last_name', models.CharField(max_length=75, null=True)),
                ('customer_first_name', models.CharField(max_length=75, null=True)),
                ('review', models.CharField(blank=True, max_length=255, null=True)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, null=True)),
                ('vehicle_type', models.PositiveSmallIntegerField(choices=[(0, 'TBD'), (1, 'Motorbike'), (2, 'Motorbike with box'), (3, 'Pick Up Open'), (4, 'Pick Up Closed'), (5, 'Van'), (6, 'Truck 3 Tone'), (7, 'Truck 4 Tone'), (8, 'Truck 5 Tone'), (9, 'Truck 7 Tone'), (10, 'Truck 10 Tone'), (11, 'Truck 12 Tone'), (12, 'Truck 25 Tone'), (13, 'Truck 27 Tone'), (14, 'Truck 3 Tone Refer'), (15, 'Trailer 27 Ton with container'), (16, 'Inter-county'), (17, 'Global')], default=0)),
                ('preffered_delivery_date', models.DateField(default=datetime.date.today)),
                ('preffered_delivery_period', models.PositiveSmallIntegerField(choices=[(1, 'Anytime'), (2, 'Morning'), (3, 'Afternoon')], default=1)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_added_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_modified_by', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('rider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='driver.driver')),
            ],
            options={
                'unique_together': {('ref', 'organization')},
            },
        ),
    ]
